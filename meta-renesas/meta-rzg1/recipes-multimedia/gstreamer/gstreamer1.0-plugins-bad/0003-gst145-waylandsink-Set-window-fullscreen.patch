From 84912584b8109a53f918093737058139da2dcf04 Mon Sep 17 00:00:00 2001
From: TungDang <tung.dang.jy@rvc.renesas.com>
Date: Sun, 21 Aug 2016 07:01:29 +0700
Subject: [PATCH 3/9] gst145-waylandsink-Set-window-fullscreen

Signed-off-by: TungDang <tung.dang.jy@rvc.renesas.com>
---
 ext/wayland/gstwaylandsink.c | 20 +++++++++++++++++++-
 ext/wayland/gstwaylandsink.h |  1 +
 ext/wayland/wlwindow.c       | 20 ++++++++++++++++++++
 ext/wayland/wlwindow.h       |  3 +++
 4 files changed, 43 insertions(+), 1 deletion(-)

diff --git a/ext/wayland/gstwaylandsink.c b/ext/wayland/gstwaylandsink.c
index 1d16229..a40b7e0 100644
--- a/ext/wayland/gstwaylandsink.c
+++ b/ext/wayland/gstwaylandsink.c
@@ -65,7 +65,8 @@ enum
   PROP_WAYLAND_POSITION_X,    /* add property (position_x) */
   PROP_WAYLAND_POSITION_Y,    /* add property (position_y) */
   PROP_WAYLAND_OUT_WIDTH,     /* add property (out_width)  */
-  PROP_WAYLAND_OUT_HEIGHT     /* add property (out_height) */
+  PROP_WAYLAND_OUT_HEIGHT,    /* add property (out_height) */
+  PROP_FULLSCREEN             /* add property (fullscreen) */
 };

 GST_DEBUG_CATEGORY (gstwayland_debug);
@@ -208,6 +209,13 @@ gst_wayland_sink_class_init (GstWaylandSinkClass * klass)
                         G_MAXINT,
                         0,
                         G_PARAM_READWRITE));
+
+  /* install property (fullscreen) */
+  g_object_class_install_property (gobject_class, PROP_FULLSCREEN,
+      g_param_spec_boolean ("fullscreen",
+          "Fullscreen", "Display fullscreen on top of weston bar. "
+                        "Position will be at center of screen",
+          FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READWRITE));
 }

 static void
@@ -221,6 +229,7 @@ gst_wayland_sink_init (GstWaylandSink * sink)
   sink->scale = 0;
   sink->out_width = 0;
   sink->out_height = 0;
+  sink->fullscreen = FALSE;
 }

 static void
@@ -251,6 +260,10 @@ gst_wayland_sink_get_property (GObject * object,
       /* set out_height property */
       g_value_set_int (value, sink->out_height);
       break;
+    case PROP_FULLSCREEN:
+     /* set fullscreen property */
+      g_value_set_boolean (value, sink->fullscreen);
+      break;
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
       break;
@@ -285,6 +298,9 @@ gst_wayland_sink_set_property (GObject * object,
       /* get out_height property */
       sink->out_height = g_value_get_int (value);
       break;
+    case PROP_FULLSCREEN:
+      sink->fullscreen = g_value_get_boolean (value);
+      break;
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
       break;
@@ -803,6 +819,8 @@ gst_wayland_sink_render (GstBaseSink * bsink, GstBuffer * buffer)
       }
     }
     sink->video_info_changed = FALSE;
+    if(sink->fullscreen)
+         gst_wl_window_set_fullscreen (sink->window);
   }

   wl_display_dispatch_queue_pending (sink->display->display, sink->frame_queue);
diff --git a/ext/wayland/gstwaylandsink.h b/ext/wayland/gstwaylandsink.h
index 70ac3ca..54b0549 100644
--- a/ext/wayland/gstwaylandsink.h
+++ b/ext/wayland/gstwaylandsink.h
@@ -72,6 +72,7 @@ struct _GstWaylandSink
   gint out_width;   /* property out_width */
   gint out_height;  /* property out_height */
   uint32_t scale;
+  gboolean fullscreen;

   struct wl_event_queue *frame_queue;
 };
diff --git a/ext/wayland/wlwindow.c b/ext/wayland/wlwindow.c
index 623a7b4..ea6c5ef 100644
--- a/ext/wayland/wlwindow.c
+++ b/ext/wayland/wlwindow.c
@@ -147,6 +147,26 @@ gst_wl_window_new_toplevel (GstWlDisplay * display, GstVideoInfo * video_info, g
   return window;
 }

+static void
+configure_callback (void *data, struct wl_callback *callback, uint32_t time)
+{
+  wl_callback_destroy (callback);
+}
+
+static struct wl_callback_listener configure_callback_listener = {
+  configure_callback,
+};
+
+void
+gst_wl_window_set_fullscreen (GstWlWindow * window)
+{
+  struct wl_callback *callback;
+  wl_shell_surface_set_fullscreen (window->shell_surface,
+     WL_SHELL_SURFACE_FULLSCREEN_METHOD_SCALE  , 0, NULL);
+  callback = wl_display_sync (window->display->display);
+  wl_callback_add_listener (callback, &configure_callback_listener, window);
+}
+
 GstWlWindow *
 gst_wl_window_new_in_surface (GstWlDisplay * display,
     struct wl_surface * parent)
diff --git a/ext/wayland/wlwindow.h b/ext/wayland/wlwindow.h
index 472576e..454a007 100644
--- a/ext/wayland/wlwindow.h
+++ b/ext/wayland/wlwindow.h
@@ -75,6 +75,9 @@ void gst_wl_window_set_video_info (GstWlWindow * window, GstVideoInfo * info);
 void gst_wl_window_set_render_rectangle (GstWlWindow * window, gint x, gint y,
         gint w, gint h);

+/* functions for FULLSCREEN setting */
+void gst_wl_window_set_fullscreen( GstWlWindow * window);
+
 G_END_DECLS

 #endif /* __GST_WL_WINDOW_H__ */
--
1.9.1
