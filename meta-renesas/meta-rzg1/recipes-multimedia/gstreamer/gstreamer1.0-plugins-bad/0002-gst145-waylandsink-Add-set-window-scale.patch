From af055092afc625e0a7aacee122a039738435de5e Mon Sep 17 00:00:00 2001
From: TungDang <tung.dang.jy@rvc.renesas.com>
Date: Sun, 21 Aug 2016 06:56:15 +0700
Subject: [PATCH 2/9] gst145-waylandsink-Add-set-window-scale

Signed-off-by: TungDang <tung.dang.jy@rvc.renesas.com>
---
 ext/wayland/gstwaylandsink.c | 49 ++++++++++++++++++++++++++++++++++++++++----
 ext/wayland/gstwaylandsink.h |  3 +++
 ext/wayland/wlwindow.c       |  4 ++--
 ext/wayland/wlwindow.h       |  2 +-
 4 files changed, 51 insertions(+), 7 deletions(-)

diff --git a/ext/wayland/gstwaylandsink.c b/ext/wayland/gstwaylandsink.c
index 14a93d6..1d16229 100644
--- a/ext/wayland/gstwaylandsink.c
+++ b/ext/wayland/gstwaylandsink.c
@@ -63,7 +63,9 @@ enum
   PROP_0,
   PROP_DISPLAY,
   PROP_WAYLAND_POSITION_X,    /* add property (position_x) */
-  PROP_WAYLAND_POSITION_Y     /* add property (position_y) */
+  PROP_WAYLAND_POSITION_Y,    /* add property (position_y) */
+  PROP_WAYLAND_OUT_WIDTH,     /* add property (out_width)  */
+  PROP_WAYLAND_OUT_HEIGHT     /* add property (out_height) */
 };

 GST_DEBUG_CATEGORY (gstwayland_debug);
@@ -187,6 +189,25 @@ gst_wayland_sink_class_init (GstWaylandSinkClass * klass)
                         G_MAXINT,
                         0,
                         G_PARAM_READWRITE));
+  /* install property (out_width) */
+  g_object_class_install_property (G_OBJECT_CLASS(klass), PROP_WAYLAND_OUT_WIDTH,
+      g_param_spec_int ("out_width",
+                        "Out_width",
+                        "Wayland  Out_width value from the application",
+                        0,
+                        G_MAXINT,
+                        0,
+                        G_PARAM_READWRITE));
+
+  /* install property (out_height) */
+  g_object_class_install_property (G_OBJECT_CLASS(klass), PROP_WAYLAND_OUT_HEIGHT,
+      g_param_spec_int ("out_height",
+                        "Out_height",
+                        "Wayland  Out_height value from the application",
+                        0,
+                        G_MAXINT,
+                        0,
+                        G_PARAM_READWRITE));
 }

 static void
@@ -197,6 +218,9 @@ gst_wayland_sink_init (GstWaylandSink * sink)
   sink->position_x = -1;
   sink->position_y = -1;
   sink->exist_position = 0;
+  sink->scale = 0;
+  sink->out_width = 0;
+  sink->out_height = 0;
 }

 static void
@@ -219,6 +243,14 @@ gst_wayland_sink_get_property (GObject * object,
       /* set position_y property */
       g_value_set_int (value, sink->position_y);
       break;
+    case PROP_WAYLAND_OUT_WIDTH:
+      /* set out_width property */
+      g_value_set_int (value, sink->out_width);
+      break;
+    case PROP_WAYLAND_OUT_HEIGHT:
+      /* set out_height property */
+      g_value_set_int (value, sink->out_height);
+      break;
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
       break;
@@ -245,6 +277,14 @@ gst_wayland_sink_set_property (GObject * object,
       /* get position_y property */
       sink->position_y = g_value_get_int (value);
       break;
+    case PROP_WAYLAND_OUT_WIDTH:
+      /* get out_width property */
+      sink->out_width = g_value_get_int (value);
+      break;
+    case PROP_WAYLAND_OUT_HEIGHT:
+      /* get out_height property */
+      sink->out_height = g_value_get_int (value);
+      break;
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
       break;
@@ -751,14 +791,15 @@ gst_wayland_sink_render (GstBaseSink * bsink, GstBuffer * buffer)
       gst_wl_window_set_video_info (sink->window, &sink->video_info);
     } else {
       /* if we were not provided a window, create one ourselves */
-      /* set window position */
+      /* set window position and scale */
+      sink->scale = (sink->out_width << 16) | sink->out_height;
       if ( (sink->position_x == -1) || (sink->position_y == -1) ) {
         sink->window =
-           gst_wl_window_new_toplevel (sink->display, &sink->video_info, sink->position_x, sink->position_y, sink->exist_position);
+           gst_wl_window_new_toplevel (sink->display, &sink->video_info, sink->position_x, sink->position_y, sink->exist_position, sink->scale);
       } else {
         sink->exist_position = 1;
         sink->window =
-           gst_wl_window_new_toplevel (sink->display, &sink->video_info, sink->position_x, sink->position_y, sink->exist_position);
+           gst_wl_window_new_toplevel (sink->display, &sink->video_info, sink->position_x, sink->position_y, sink->exist_position, sink->scale);
       }
     }
     sink->video_info_changed = FALSE;
diff --git a/ext/wayland/gstwaylandsink.h b/ext/wayland/gstwaylandsink.h
index 4e2778d..70ac3ca 100644
--- a/ext/wayland/gstwaylandsink.h
+++ b/ext/wayland/gstwaylandsink.h
@@ -69,6 +69,9 @@ struct _GstWaylandSink
   gint position_x;  /* property(position_x) */
   gint position_y;  /* property(position_y) */
   gint exist_position;
+  gint out_width;   /* property out_width */
+  gint out_height;  /* property out_height */
+  uint32_t scale;

   struct wl_event_queue *frame_queue;
 };
diff --git a/ext/wayland/wlwindow.c b/ext/wayland/wlwindow.c
index abad9f6..623a7b4 100644
--- a/ext/wayland/wlwindow.c
+++ b/ext/wayland/wlwindow.c
@@ -116,7 +116,7 @@ gst_wl_window_new_internal (GstWlDisplay * display, struct wl_surface *surface)
 }

 GstWlWindow *
-gst_wl_window_new_toplevel (GstWlDisplay * display, GstVideoInfo * video_info, gint posx, gint posy, gint exist_pos)
+gst_wl_window_new_toplevel (GstWlDisplay * display, GstVideoInfo * video_info, gint posx, gint posy, gint exist_pos, uint32_t scale)
 {
   GstWlWindow *window;

@@ -134,7 +134,7 @@ gst_wl_window_new_toplevel (GstWlDisplay * display, GstVideoInfo * video_info, g
     wl_shell_surface_add_listener (window->shell_surface,
         &shell_surface_listener, window);
     if (exist_pos){
-        wl_shell_surface_set_transient (window->shell_surface, window->surface, posx, posy, 0);
+        wl_shell_surface_set_transient (window->shell_surface, window->surface, posx, posy, scale);
     }
     wl_shell_surface_set_toplevel (window->shell_surface);
   } else {
diff --git a/ext/wayland/wlwindow.h b/ext/wayland/wlwindow.h
index c8aa1dc..472576e 100644
--- a/ext/wayland/wlwindow.h
+++ b/ext/wayland/wlwindow.h
@@ -62,7 +62,7 @@ struct _GstWlWindowClass
 GType gst_wl_window_get_type (void);

 GstWlWindow *gst_wl_window_new_toplevel (GstWlDisplay * display,
-        GstVideoInfo * video_info, gint posx, gint posy, gint exist_pos);
+        GstVideoInfo * video_info, gint posx, gint posy, gint exist_pos, uint32_t scale);
 GstWlWindow *gst_wl_window_new_in_surface (GstWlDisplay * display,
         struct wl_surface * parent);

--
1.9.1
