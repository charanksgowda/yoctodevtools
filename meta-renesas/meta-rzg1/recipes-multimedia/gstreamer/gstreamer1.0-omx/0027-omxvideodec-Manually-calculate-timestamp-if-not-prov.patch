From bbe6dc706d121967aea2e648c55c3dffe6353281 Mon Sep 17 00:00:00 2001
From: Thao Luong <thao.luong.uw@rvc.renesas.com>
Date: Wed, 27 May 2015 11:44:54 +0700
Subject: [PATCH 23/25] omxvideodec: Manually calculate timestamp if not
 provided

When video does not provide timestamp or duration video will not
played correctly. This patch will manually calculate timestamp
for it.

refs #69206
Signed-off-by: Thao Luong <thao.luong.uw@rvc.renesas.com>
---
 omx/gstomxvideodec.c | 37 +++++++++++++++++++++++++++----------
 1 file changed, 27 insertions(+), 10 deletions(-)

diff --git a/omx/gstomxvideodec.c b/omx/gstomxvideodec.c
index 7f9db53..242eb09 100644
--- a/omx/gstomxvideodec.c
+++ b/omx/gstomxvideodec.c
@@ -115,6 +115,9 @@ enum
 G_DEFINE_ABSTRACT_TYPE_WITH_CODE (GstOMXVideoDec, gst_omx_video_dec,
     GST_TYPE_VIDEO_DECODER, DEBUG_INIT);
 
+/* Default fps for input files that does not support fps */
+#define DEFAULT_FRAME_PER_SECOND  30
+
 /* copy_frame_buffer will copy GstBuffer of input frame into OMXBuffer */
 static gsize
 gst_omx_video_dec_copy_frame_buffer (GstOMXVideoDec * self, GstBuffer * inbuf,
@@ -2442,6 +2445,11 @@ gst_omx_video_dec_handle_frame (GstVideoDecoder * decoder,
         (GstTaskFunction) gst_omx_video_dec_loop, decoder, NULL);
   }
 
+  /* Workaround for timestamp issue */
+  if (!GST_CLOCK_TIME_IS_VALID (frame->pts) &&
+         GST_CLOCK_TIME_IS_VALID (frame->dts))
+    frame->pts = frame->dts;
+
   timestamp = frame->pts;
   duration = frame->duration;
 
@@ -2590,20 +2598,29 @@ gst_omx_video_dec_handle_frame (GstVideoDecoder * decoder,
     }
 
     if (timestamp != GST_CLOCK_TIME_NONE) {
-      buf->omx_buf->nTimeStamp =
-          gst_util_uint64_scale (timestamp, OMX_TICKS_PER_SECOND, GST_SECOND);
       self->last_upstream_ts = timestamp;
     } else {
-      buf->omx_buf->nTimeStamp = 0;
+      /* Video stream does not provide timestamp, try calculate */
+      if (offset == 0) {
+        if (duration != GST_CLOCK_TIME_NONE )
+          /* In case timestamp is invalid. may use duration to calculate
+           * timestamp */
+          self->last_upstream_ts += duration;
+        else
+          /* Use default fps value as last resort */
+          self->last_upstream_ts += gst_util_uint64_scale (1,
+                GST_SECOND, DEFAULT_FRAME_PER_SECOND);
+
+        timestamp = self->last_upstream_ts;
+        frame->pts = timestamp;
+      }
     }
 
-    if (duration != GST_CLOCK_TIME_NONE && offset == 0) {
-      buf->omx_buf->nTickCount =
-          gst_util_uint64_scale (duration, OMX_TICKS_PER_SECOND, GST_SECOND);
-      self->last_upstream_ts += duration;
-    } else {
-      buf->omx_buf->nTickCount = 0;
-    }
+    buf->omx_buf->nTimeStamp =
+      gst_util_uint64_scale (timestamp, OMX_TICKS_PER_SECOND, GST_SECOND);
+
+    buf->omx_buf->nTickCount =
+      gst_util_uint64_scale (inbuf_consumed, duration, size);
 
     if (offset == 0 && GST_VIDEO_CODEC_FRAME_IS_SYNC_POINT (frame))
       buf->omx_buf->nFlags |= OMX_BUFFERFLAG_SYNCFRAME;
-- 
2.4.0

