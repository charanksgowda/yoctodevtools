From 55ab9b887722f8dcfa0ac2107dc2dd931c203d3a Mon Sep 17 00:00:00 2001
From: Long Dang <long.dang.aj@rvc.renesas.com>
Date: Fri, 12 Aug 2016 15:01:43 +0700
Subject: [PATCH 42/42] gst145-omxvideodec: Export a first dmabuf file
 descriptor with the whole size of planes

Porting from a patch in Linux 3.10 environment made by Kazunori Kobayashi <kkobayas@igel.co.jp>

This patch exports a dmabuf file descriptor from the head of Y plane
to the end of the buffer so that mapping the whole plane as
contiguous memory is available.
The dmabuf exporting is group into a function.

Signed-off-by: Long Dang <long.dang.aj@rvc.renesas.com>
---
 omx/gstomxbufferpool.c | 74 +++++++++++++++++++++++++++++++++++---------------
 1 file changed, 52 insertions(+), 22 deletions(-)

diff --git a/omx/gstomxbufferpool.c b/omx/gstomxbufferpool.c
index 52128b6..98e5526 100644
--- a/omx/gstomxbufferpool.c
+++ b/omx/gstomxbufferpool.c
@@ -599,6 +599,31 @@ gst_omx_buffer_pool_request_videosink_buffer_creation (GstOMXBufferPool * pool,
 }
 #endif
 
+#ifdef HAVE_MMNGRBUF
+static gboolean
+gst_omx_buffer_pool_export_dmabuf (GstOMXBufferPool * pool,
+    guint phys_addr, gint size, gint boundary, gint * id_export,
+    gint * dmabuf_fd)
+{
+  gint res;
+
+  res =
+      mmngr_export_start_in_user (id_export,
+      (size + boundary - 1) & ~(boundary - 1), (unsigned long) phys_addr,
+      dmabuf_fd);
+  if (res != R_MM_OK) {
+    GST_ERROR_OBJECT (pool,
+        "mmngr_export_start_in_user failed (phys_addr:0x%08x)", phys_addr);
+    return FALSE;
+  }
+  GST_DEBUG_OBJECT (pool,
+      "Export dmabuf:%d id_export:%d (phys_addr:0x%08x)", *dmabuf_fd,
+      *id_export, phys_addr);
+
+  return TRUE;
+}
+#endif
+
 static GstFlowReturn
 gst_omx_buffer_pool_acquire_buffer (GstBufferPool * bpool,
     GstBuffer ** buffer, GstBufferPoolAcquireParams * params)
@@ -636,40 +661,45 @@ gst_omx_buffer_pool_acquire_buffer (GstBufferPool * bpool,
         gint i;
         gint dmabuf_fd[GST_VIDEO_MAX_PLANES];
         gint plane_size[GST_VIDEO_MAX_PLANES];
+        guint phys_addr;
+        OMXR_MC_VIDEO_DECODERESULTTYPE *decode_res =
+               (OMXR_MC_VIDEO_DECODERESULTTYPE *) omx_buf->
+               omx_buf->pOutputPortPrivate;
+        gint page_size;
   
         GST_DEBUG_OBJECT (pool, "Create dmabuf mem pBuffer=%p",
             omx_buf->omx_buf->pBuffer);
   
         vmeta = gst_buffer_get_video_meta (buf);
   
+        phys_addr = (guint) decode_res->pvPhysImageAddressY;
+        page_size = getpagesize ();
+
+        /* Export a dmabuf file descriptor from the head of Y plane to
+         * the end of the buffer so that mapping the whole plane as
+         * contiguous memory is available. */
+        if (!gst_omx_buffer_pool_export_dmabuf (pool, phys_addr,
+                pool->port->port_def.nBufferSize, page_size,
+                &vdbuf_data->id_export[0], &dmabuf_fd[0])) {
+          GST_ERROR_OBJECT (pool, "dmabuf exporting failed");
+          return GST_FLOW_ERROR;
+        }
+
+        plane_size[0] = vmeta->stride[0] *
+            GST_VIDEO_INFO_COMP_HEIGHT (&pool->video_info, 0);
+
+        /* Export dmabuf file descriptors from second and subsequent planes */
         n_planes = GST_VIDEO_INFO_N_PLANES (&pool->video_info);
-        for (i = 0; i < n_planes; i++) {
-          gint res;
-          guint phys_addr;
-          OMXR_MC_VIDEO_DECODERESULTTYPE *decode_res =
-              (OMXR_MC_VIDEO_DECODERESULTTYPE *) omx_buf->
-              omx_buf->pOutputPortPrivate;
-          gint page_size;
-  
+        for (i = 1; i < n_planes; i++) {
           phys_addr = (guint) decode_res->pvPhysImageAddressY + vmeta->offset[i];
           plane_size[i] = vmeta->stride[i] *
               GST_VIDEO_INFO_COMP_HEIGHT (&pool->video_info, i);
-          page_size = getpagesize ();
-  
-          res =
-              mmngr_export_start_in_user (&vdbuf_data->id_export[i],
-              (plane_size[i] + page_size - 1) & ~(page_size - 1),
-              (unsigned long) phys_addr, &dmabuf_fd[i]);
-          if (res != R_MM_OK) {
-            GST_ERROR_OBJECT (pool,
-                "mmngr_export_start_in_user failed (phys_addr:0x%08x)",
-                phys_addr);
+
+          if (!gst_omx_buffer_pool_export_dmabuf (pool, phys_addr, plane_size[i],
+                  page_size, &vdbuf_data->id_export[i], &dmabuf_fd[i])) {
+            GST_ERROR_OBJECT (pool, "dmabuf exporting failed");
             return GST_FLOW_ERROR;
           }
-  
-          GST_DEBUG_OBJECT (pool,
-              "Export dmabuf:%d id_export:%d (phys_addr:0x%08x)", dmabuf_fd[i],
-              vdbuf_data->id_export[i], phys_addr);
         }
   
         if (pool->vsink_buf_req_supported)
-- 
1.9.1

