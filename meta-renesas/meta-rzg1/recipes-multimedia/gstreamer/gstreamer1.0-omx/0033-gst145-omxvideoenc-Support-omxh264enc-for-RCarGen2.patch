From dafb5de4eb04c2dd9577c78519a1970aa6d384c1 Mon Sep 17 00:00:00 2001
From: Long Dang <long.dang.aj@rvc.renesas.com>
Date: Thu, 11 Aug 2016 16:19:53 +0700
Subject: [PATCH 33/42] gst145-omxvideoenc: Support omxh264enc for RCarGen2

Porting from a patch in Linux 3.10 environment made by Thao Luong <thao.luong.uw@rvc.renesas.com>

Base on X11, this patch support omxh264enc:
omxh264enc receive video/x-raw with format is
{NV12, I420} and encode to video/x-264, stream-format is byte-stream. For more
information please refer to gst-inspect-1.0 omxh264enc
Ex:
gst-launch-1.0 -e videotestsrc ! video/x-raw,width=640,height=480,format=NV12 ! omxh264enc target-bitrate=4800000 control-rate=2 ! h264parse ! video/x-h264,stream-format=avc,alignment=au ! qtmux ! filesink location=encodefile.mp4

refs #59333

Signed-off-by: Long Dang <long.dang.aj@rvc.renesas.com>
---
 config/rcar/gstomx.conf |  9 +++++++++
 omx/gstomx.c            |  2 ++
 omx/gstomx.h            |  8 ++++++++
 omx/gstomxh264enc.c     |  9 +++++++--
 omx/gstomxvideoenc.c    | 34 +++++++++++++++++++++++++++++++---
 5 files changed, 57 insertions(+), 5 deletions(-)

diff --git a/config/rcar/gstomx.conf b/config/rcar/gstomx.conf
index 4f5eab4..5cd975a 100644
--- a/config/rcar/gstomx.conf
+++ b/config/rcar/gstomx.conf
@@ -15,3 +15,12 @@ rank=256
 in-port-index=0
 out-port-index=1
 hacks=no-disable-outport;not-handle-codec-data
+
+[omxh264enc]
+type-name=GstOMXH264Enc
+core-name=/usr/local/lib/libomxr_core.so
+component-name=OMX.RENESAS.VIDEO.ENCODER.H264
+rank=256
+in-port-index=0
+out-port-index=1
+hacks=no-disable-outport;renesas-encmc-stride-align
diff --git a/omx/gstomx.c b/omx/gstomx.c
index 7d8abdd..08d7ba8 100644
--- a/omx/gstomx.c
+++ b/omx/gstomx.c
@@ -2476,6 +2476,8 @@ gst_omx_parse_hacks (gchar ** hacks)
       hacks_flags |= GST_OMX_HACK_USE_USERPTR_MODE_AS_DEFAULT;
     else if (g_str_equal (*hacks, "no-query-drain-on-eos"))
       hacks_flags |= GST_OMX_HACK_NO_QUERY_DRAIN_ON_EOS;
+    else if (g_str_equal (*hacks, "renesas-encmc-stride-align"))
+      hacks_flags |= GST_OMX_HACK_RENESAS_ENCMC_STRIDE_ALIGN;
     else
       GST_WARNING ("Unknown hack: %s", *hacks);
     hacks++;
diff --git a/omx/gstomx.h b/omx/gstomx.h
index 06d2f31..7e0aa62 100644
--- a/omx/gstomx.h
+++ b/omx/gstomx.h
@@ -144,6 +144,14 @@ G_BEGIN_DECLS
  */
 #define GST_OMX_HACK_NO_QUERY_DRAIN_ON_EOS                      G_GUINT64_CONSTANT (0x0000000000002000)
 
+/* Renesas encode MC has limitation for input stride:
+ * + Format YUV420Planar/YVU420Planar: Stride must be 256, 512, 1024,
+ * 2048
+ * + Others (YUV420SemiPlanar/YVY420SemiPlanar: Stride must be a
+ * multiple of 128
+ */
+#define GST_OMX_HACK_RENESAS_ENCMC_STRIDE_ALIGN                   G_GUINT64_CONSTANT (0x0000000000004000)
+
 typedef struct _GstOMXCore GstOMXCore;
 typedef struct _GstOMXPort GstOMXPort;
 typedef enum _GstOMXPortDirection GstOMXPortDirection;
diff --git a/omx/gstomxh264enc.c b/omx/gstomxh264enc.c
index aa33ae5..8515455 100644
--- a/omx/gstomxh264enc.c
+++ b/omx/gstomxh264enc.c
@@ -1,6 +1,7 @@
 /*
  * Copyright (C) 2011, Hewlett-Packard Development Company, L.P.
  *   Author: Sebastian Dröge <sebastian.droege@collabora.co.uk>, Collabora Ltd.
+ * Copyright (C) 2016, Renesas Electronics Corporation
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -121,7 +122,11 @@ gst_omx_h264_enc_class_init (GstOMXH264EncClass * klass)
   basevideoenc_class->stop = gst_omx_h264_enc_stop;
 
   videoenc_class->cdata.default_src_template_caps = "video/x-h264, "
-      "width=(int) [ 16, 4096 ], " "height=(int) [ 16, 4096 ]";
+      "width=(int) [ 16, 4096 ], " "height=(int) [ 16, 4096 ], "
+      "stream-format= (string)byte-stream, "
+      "profile = (string){baseline, main, high}, "
+      "level = (string){1, 1b, 1.1, 1.2, 1.3, 2, 2.1, 2.2, \
+                                             3, 3.1, 3.2, 4, 4.1, 4.2}";
   videoenc_class->handle_output_frame =
       GST_DEBUG_FUNCPTR (gst_omx_h264_enc_handle_output_frame);
 
@@ -129,7 +134,7 @@ gst_omx_h264_enc_class_init (GstOMXH264EncClass * klass)
       "OpenMAX H.264 Video Encoder",
       "Codec/Encoder/Video",
       "Encode H.264 video streams",
-      "Sebastian Dröge <sebastian.droege@collabora.co.uk>");
+      "Encode video with OpenMAX IL <Renesas Electronics>");
 
   gst_omx_set_default_role (&videoenc_class->cdata, "video_encoder.avc");
 }
diff --git a/omx/gstomxvideoenc.c b/omx/gstomxvideoenc.c
index 0f64a02..8cb35ae 100644
--- a/omx/gstomxvideoenc.c
+++ b/omx/gstomxvideoenc.c
@@ -1,6 +1,7 @@
 /*
  * Copyright (C) 2011, Hewlett-Packard Development Company, L.P.
  *   Author: Sebastian Dröge <sebastian.droege@collabora.co.uk>, Collabora Ltd.
+ * Copyright (C) 2016, Renesas Electronics Corporation
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -183,8 +184,9 @@ gst_omx_video_enc_class_init (GstOMXVideoEncClass * klass)
   klass->cdata.type = GST_OMX_COMPONENT_TYPE_FILTER;
   klass->cdata.default_sink_template_caps = "video/x-raw, "
       "width = " GST_VIDEO_SIZE_RANGE ", "
-      "height = " GST_VIDEO_SIZE_RANGE ", " "framerate = " GST_VIDEO_FPS_RANGE;
-
+      "height = " GST_VIDEO_SIZE_RANGE ", "
+      "framerate = " GST_VIDEO_FPS_RANGE ","
+      "format=(string) {I420, NV12}";
   klass->handle_output_frame =
       GST_DEBUG_FUNCPTR (gst_omx_video_enc_handle_output_frame);
 }
@@ -1022,7 +1024,33 @@ gst_omx_video_enc_set_format (GstVideoEncoder * encoder,
         (info->width + port_def.nBufferAlignment - 1) &
         (~(port_def.nBufferAlignment - 1));
   else
-    port_def.format.video.nStride = GST_ROUND_UP_4 (info->width);       /* safe (?) default */
+  {
+    if (klass->cdata.hacks & GST_OMX_HACK_RENESAS_ENCMC_STRIDE_ALIGN)
+    {
+      switch (port_def.format.video.eColorFormat) {
+      case OMX_COLOR_FormatYUV420Planar: {
+        /*Renesas encode MC only support following strides*/
+        if (info->width <= 256)
+          port_def.format.video.nStride = 256;
+        else if ((info->width > 256) && (info->width <= 512))
+          port_def.format.video.nStride = 512;
+        else if ((info->width > 512) && (info->width <= 1024))
+          port_def.format.video.nStride = 1024;
+        else
+          port_def.format.video.nStride = 2048;
+        break;
+      }
+      case OMX_COLOR_FormatYUV420SemiPlanar:
+        port_def.format.video.nStride = ((info->width + 127) & ~ 127);   /* Align 128 */
+      break;
+      default:
+        port_def.format.video.nStride = GST_ROUND_UP_4 (info->width);    /* Safe (?) default */
+      break;
+      }
+    } else {
+      port_def.format.video.nStride = GST_ROUND_UP_4 (info->width);    /* Safe (?) default */
+    }
+  }
 
   port_def.format.video.nFrameHeight = info->height;
   port_def.format.video.nSliceHeight = info->height;
-- 
1.9.1

