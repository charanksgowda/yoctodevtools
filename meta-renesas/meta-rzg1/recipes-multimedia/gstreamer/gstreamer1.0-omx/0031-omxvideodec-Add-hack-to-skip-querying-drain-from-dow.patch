From a2d1cc9bd918f9402a67ba688af8c29034a5d7ca Mon Sep 17 00:00:00 2001
From: Thao Luong <thao.luong.uw@rvc.renesas.com>
Date: Mon, 8 Jun 2015 14:48:31 +0700
Subject: [PATCH 1/1] omxvideodec: Add hack to skip querying drain from
 downstream when meet eos

omxvideodec query drain from downstream when meet eos.
This causes memory leak when run with vspfilter/waylandsink
Because vspfilter and waylandsink do not implement for querying drain
So they use parent classes's implementation and it seem that it may
not give back certain buffers kept as observation and cause init
without free situation.

This patch file will create a hack "no-query-drain-on-eos" to skip
querying drain from downstream if downstream do not need to drain.

"no-query-drain-on-eos" is added in gstomx.conf as defaut. Remove it
if want to query drain from downstream.

Signed-off-by: Thao Luong <thao.luong.uw@rvc.renesas.com>
---
 config/rcar/gstomx.conf                 |   2 +-
 omx/gstomx.c                            |   2 ++
 omx/gstomx.h                            |   5 +++++
 omx/gstomxvideodec.c                    |  12 +++++++-----
 4 files changed, 15 insertions(+), 6 deletions(-)

diff --git a/config/rcar/gstomx.conf b/config/rcar/gstomx.conf
index d93362e..4f5eab4 100644
--- a/config/rcar/gstomx.conf
+++ b/config/rcar/gstomx.conf
@@ -5,7 +5,7 @@ component-name=OMX.RENESAS.VIDEO.DECODER.H264
 rank=512
 in-port-index=0
 out-port-index=1
-hacks=no-disable-outport;default-pix-aspect-ratio
+hacks=no-disable-outport;default-pix-aspect-ratio;no-query-drain-on-eos
 
 [omxaacdec]
 type-name=GstOMXAACDec
diff --git a/omx/gstomx.c b/omx/gstomx.c
index e1ca49c..7d8abdd 100644
--- a/omx/gstomx.c
+++ b/omx/gstomx.c
@@ -2474,6 +2474,8 @@ gst_omx_parse_hacks (gchar ** hacks)
       hacks_flags |= GST_OMX_HACK_USE_COPY_MODE_AS_DEFAULT;
     else if (g_str_equal (*hacks, "use-userptr-mode-as-default"))
       hacks_flags |= GST_OMX_HACK_USE_USERPTR_MODE_AS_DEFAULT;
+    else if (g_str_equal (*hacks, "no-query-drain-on-eos"))
+      hacks_flags |= GST_OMX_HACK_NO_QUERY_DRAIN_ON_EOS;
     else
       GST_WARNING ("Unknown hack: %s", *hacks);
     hacks++;
diff --git a/omx/gstomx.h b/omx/gstomx.h
index dc3a888..d1cfea5 100644
--- a/omx/gstomx.h
+++ b/omx/gstomx.h
@@ -139,6 +139,11 @@ G_BEGIN_DECLS
  */
 #define GST_OMX_HACK_USE_USERPTR_MODE_AS_DEFAULT                       G_GUINT64_CONSTANT (0x0000000000001000)
 
+/* If downstream do not need to drain when meet eos. This hack will skip
+ *  querying it from omxvideodec
+ */
+#define GST_OMX_HACK_NO_QUERY_DRAIN_ON_EOS                      G_GUINT64_CONSTANT (0x0000000000002000)
+
 typedef struct _GstOMXCore GstOMXCore;
 typedef struct _GstOMXPort GstOMXPort;
 typedef enum _GstOMXPortDirection GstOMXPortDirection;
diff --git a/omx/gstomxvideodec.c b/omx/gstomxvideodec.c
index b831fb7..f0f080d 100644
--- a/omx/gstomxvideodec.c
+++ b/omx/gstomxvideodec.c
@@ -1812,12 +1812,14 @@ eos:
   {
     g_mutex_lock (&self->drain_lock);
     if (self->draining) {
-      GstQuery *query = gst_query_new_drain ();
+      if (!klass->cdata.hacks & GST_OMX_HACK_NO_QUERY_DRAIN_ON_EOS) {
+        GstQuery *query = gst_query_new_drain ();
 
-      /* Drain the pipeline to reclaim all memories back to the pool */
-      if (!gst_pad_peer_query (GST_VIDEO_DECODER_SRC_PAD (self), query))
-        GST_DEBUG_OBJECT (self, "drain query failed");
-      gst_query_unref (query);
+        /* Drain the pipeline to reclaim all memories back to the pool */
+        if (!gst_pad_peer_query (GST_VIDEO_DECODER_SRC_PAD (self), query))
+          GST_DEBUG_OBJECT (self, "drain query failed");
+        gst_query_unref (query);
+    }
 
       GST_DEBUG_OBJECT (self, "Drained");
       self->draining = FALSE;
-- 
2.4.0

