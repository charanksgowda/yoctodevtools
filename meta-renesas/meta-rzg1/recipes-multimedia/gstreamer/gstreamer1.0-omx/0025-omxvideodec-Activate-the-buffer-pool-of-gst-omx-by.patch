From b0104fed643d8db7671f280b55895d02a2b1e8a5 Mon Sep 17 00:00:00 2001
From: Thao Luong <thao.luong.uw@rvc.renesas.com>
Date: Wed, 27 May 2015 11:42:05 +0700
Subject: [PATCH 21/25] omxvideodec: Activate the buffer pool of gst-omx by 
 itself rather than by the gstvideodecoder

This change removes a reference to the buffer pool of gst-omx
from the gstvideodecoder as a preliminary modification in order to
fix the memory leak due to two way reference between the buffer pool
and the gstvideodecoder.
The buffer pool of gst-omx had been controlled regarding only
the state transition by the gstvideodecoder, so this change does not
set the buffer pool to the gstvideodecoder and invokes activation of
the buffer pool in this plugin.
The deactivation of the buffer pool has already been called in
gst_omx_video_dec_deallocate_output_buffers().

The video buffer pool, which is the default buffer pool in the GStreamer
video library, is set to the gstvideodecoder instead, because
it is mandatoty to set a buffer pool into the gstvideodecoder class.

refs #69206
Signed-off-by: Thao Luong <thao.luong.uw@rvc.renesas.com>
---
 omx/gstomxvideodec.c | 36 +++++++++++++++++++++++++-----------
 1 file changed, 25 insertions(+), 11 deletions(-)

diff --git a/omx/gstomxvideodec.c b/omx/gstomxvideodec.c
index cf26464..d0c0e70 100644
--- a/omx/gstomxvideodec.c
+++ b/omx/gstomxvideodec.c
@@ -2768,8 +2768,8 @@ gst_omx_video_dec_drain (GstOMXVideoDec * self, gboolean is_eos)
 static gboolean
 gst_omx_video_dec_decide_allocation (GstVideoDecoder * bdec, GstQuery * query)
 {
-  GstBufferPool *pool;
-  GstStructure *config;
+  GstBufferPool *pool, *vpool;
+  GstStructure *config, *vconfig;
   GstOMXVideoDec *self;
   GstCaps *caps;
   gboolean update_pool = FALSE;
@@ -2854,17 +2854,31 @@ gst_omx_video_dec_decide_allocation (GstVideoDecoder * bdec, GstQuery * query)
       GST_OMX_BUFFER_POOL (self->out_port_pool)->allocating = FALSE;
     }
 
+    /* This video buffer pool created below will not be used, just setting to
+     * the gstvideodecoder class through a query, because it is
+     * mandatoty to set a buffer pool into the gstvideodecoder class
+     * regardless of whether the buffer pool is actually used or not.
+     * gst-omx controls its own buffer pool by itself, so the buffer pool
+     * gst-omx will use does not have to be set to the gstvideodecoder
+     * class.
+     * When the gstbufferpool is activated, it allocates buffers from
+     * a gstallocator for the number of min_buffers in advance, which is
+     * the parameter of a buffer pool. No buffers will be allocated with
+     * the video buffer pool created below even when being activated,
+     * because the min_buffers is set as 0.
+     */
+    vpool = gst_video_buffer_pool_new ();
+    vconfig = gst_buffer_pool_get_config (vpool);
+    gst_buffer_pool_config_set_params (vconfig, caps, 0, 0, 1);
+    gst_buffer_pool_set_config (vpool, vconfig);
+
     if (update_pool)
-      gst_query_set_nth_allocation_pool (query, 0, self->out_port_pool,
-          self->dec_out_port->port_def.nBufferSize,
-          self->dec_out_port->port_def.nBufferCountActual,
-          self->dec_out_port->port_def.nBufferCountActual);
+      gst_query_set_nth_allocation_pool (query, 0, vpool,
+          self->dec_out_port->port_def.nBufferSize, 0, 1);
     else
-      gst_query_add_allocation_pool (query, self->out_port_pool,
-          self->dec_out_port->port_def.nBufferSize,
-          self->dec_out_port->port_def.nBufferCountActual,
-          self->dec_out_port->port_def.nBufferCountActual);
-    gst_object_unref (self->out_port_pool);
+      gst_query_add_allocation_pool (query, vpool,
+          self->dec_out_port->port_def.nBufferSize, 0, 1);
+    gst_object_unref (vpool);
   } else {
     if (!GST_VIDEO_DECODER_CLASS
         (gst_omx_video_dec_parent_class)->decide_allocation (bdec, query))
-- 
2.4.0

