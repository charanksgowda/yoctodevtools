From 751f3dc47caa3f2dc9ee80d7631c11556d0e98f7 Mon Sep 17 00:00:00 2001
From: Long Dang <long.dang.aj@rvc.renesas.com>
Date: Fri, 12 Aug 2016 13:52:54 +0700
Subject: [PATCH 35/42] gst145-gstomx: Workaround a restriction when
 nBufferSize is too large

Porting from a patch in Linux 3.10 environment made by HungTran <hung.tran.jy@rvc.renesas.com>

Renesas OMX Enconde MC has a restriction on input port nBufferSize.
If user sets a value > 3133440, OMX_SetParameter() will return error.

In that case, to workaround this restriction, always set 3133440 to nBufferSize
each time set param OMX_IndexParamPortDefinition for input port.
OMX Enconde MC will not use this value, but use its own calculated size

Signed-off-by: Long Dang <long.dang.aj@rvc.renesas.com>
---
 config/rcar/gstomx.conf |  2 +-
 omx/gstomx.c            | 12 +++++++++++-
 omx/gstomx.h            | 14 ++++++++++++++
 3 files changed, 26 insertions(+), 2 deletions(-)

diff --git a/config/rcar/gstomx.conf b/config/rcar/gstomx.conf
index 5cd975a..86cc7ba 100644
--- a/config/rcar/gstomx.conf
+++ b/config/rcar/gstomx.conf
@@ -23,4 +23,4 @@ component-name=OMX.RENESAS.VIDEO.ENCODER.H264
 rank=256
 in-port-index=0
 out-port-index=1
-hacks=no-disable-outport;renesas-encmc-stride-align
+hacks=no-disable-outport;renesas-encmc-stride-align;renesas-encmc-max-nbuffersize
diff --git a/omx/gstomx.c b/omx/gstomx.c
index 08d7ba8..f530847 100644
--- a/omx/gstomx.c
+++ b/omx/gstomx.c
@@ -1208,10 +1208,18 @@ gst_omx_port_update_port_definition (GstOMXPort * port,
 
   comp = port->comp;
 
-  if (port_def)
+  if (port_def) {
+    if (comp->hacks & GST_OMX_HACK_RENESAS_ENCMC_MAX_NBUFFERSIZE) {
+      if (port->port_def.eDir == OMX_DirInput &&
+          port_def->nBufferSize > 3133440)
+        port_def->nBufferSize = 3133440;
+    }
+
     err =
         gst_omx_component_set_parameter (comp, OMX_IndexParamPortDefinition,
         port_def);
+  }
+
   gst_omx_component_get_parameter (comp, OMX_IndexParamPortDefinition,
       &port->port_def);
 
@@ -2478,6 +2486,8 @@ gst_omx_parse_hacks (gchar ** hacks)
       hacks_flags |= GST_OMX_HACK_NO_QUERY_DRAIN_ON_EOS;
     else if (g_str_equal (*hacks, "renesas-encmc-stride-align"))
       hacks_flags |= GST_OMX_HACK_RENESAS_ENCMC_STRIDE_ALIGN;
+    else if (g_str_equal (*hacks, "renesas-encmc-max-nbuffersize"))
+      hacks_flags |= GST_OMX_HACK_RENESAS_ENCMC_MAX_NBUFFERSIZE;
     else
       GST_WARNING ("Unknown hack: %s", *hacks);
     hacks++;
diff --git a/omx/gstomx.h b/omx/gstomx.h
index 7e0aa62..39b95f2 100644
--- a/omx/gstomx.h
+++ b/omx/gstomx.h
@@ -152,6 +152,20 @@ G_BEGIN_DECLS
  */
 #define GST_OMX_HACK_RENESAS_ENCMC_STRIDE_ALIGN                   G_GUINT64_CONSTANT (0x0000000000004000)
 
+/* Renesas encode MC has a restriction with nBufferSize parameter on
+ * its input port.
+ * On its input port, nBufferSize can be set, but error will happen if
+ * user sets a value > 3133440
+ * (This case can happen when encoding YUV420Planar FullHD, due to above
+ * stride limitation)
+ *
+ * To workaround this restriction, set nBufferSize to 3133440 each time
+ * call OMX_SetParameter with OMX_PARAM_PORTDEFINITIONTYPE.nPortIndex=0.
+ * OMX MC will update this value itself according to its own calculation
+ */
+#define GST_OMX_HACK_RENESAS_ENCMC_MAX_NBUFFERSIZE                    G_GUINT64_CONSTANT (0x0000000000008000)
+
+
 typedef struct _GstOMXCore GstOMXCore;
 typedef struct _GstOMXPort GstOMXPort;
 typedef enum _GstOMXPortDirection GstOMXPortDirection;
-- 
1.9.1

