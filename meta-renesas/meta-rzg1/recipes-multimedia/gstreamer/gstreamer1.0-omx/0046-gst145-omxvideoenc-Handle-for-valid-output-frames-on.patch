From 86636ea11070b546239dd48dfa4948036b7bcb30 Mon Sep 17 00:00:00 2001
From: Long Dang <long.dang.aj@rvc.renesas.com>
Date: Sat, 20 Aug 2016 10:19:31 +0700
Subject: [PATCH 1/2] gst145-omxvideoenc: Handle for valid output frames only

Reference by Thao Luong <thao.luong.uw@rvc.renesas.com> (refs #82645)

Currently, finding nearest frame is chosen base on timestamp of OMXBuffer
This choosing may include OMXBuffers with invalid data (nFilledLen = 0)

This patch file will set condition to handle for valid output data
(nFilledLen > 0) only.
If there is no condition, it can lead to issue: can not decode
encoded file due to a valid frame has been taken over by invalid OMXBuffer
(nFilledLen=0). This leads to missing valid OMXBuffers and the issue happens.

Signed-off-by: Long Dang <long.dang.aj@rvc.renesas.com>
---
 omx/gstomxvideoenc.c | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

diff --git a/omx/gstomxvideoenc.c b/omx/gstomxvideoenc.c
index 427adc0..76430de 100644
--- a/omx/gstomxvideoenc.c
+++ b/omx/gstomxvideoenc.c
@@ -800,13 +800,16 @@ gst_omx_video_enc_loop (GstOMXVideoEnc * self)
       (guint) buf->omx_buf->nFlags, (guint64) buf->omx_buf->nTimeStamp);

   GST_VIDEO_ENCODER_STREAM_LOCK (self);
-  frame = gst_omx_video_find_nearest_frame (buf,
-      gst_video_encoder_get_frames (GST_VIDEO_ENCODER (self)));
+  if (buf->omx_buf->nFilledLen > 0) {
+    frame = gst_omx_video_find_nearest_frame (buf,
+        gst_video_encoder_get_frames (GST_VIDEO_ENCODER (self)));

-  g_assert (klass->handle_output_frame);
-  flow_ret = klass->handle_output_frame (self, self->enc_out_port, buf, frame);
+    g_assert (klass->handle_output_frame);
+    flow_ret =
+        klass->handle_output_frame (self, self->enc_out_port, buf, frame);

-  GST_DEBUG_OBJECT (self, "Finished frame: %s", gst_flow_get_name (flow_ret));
+    GST_DEBUG_OBJECT (self, "Finished frame: %s", gst_flow_get_name (flow_ret));
+  }

   err = gst_omx_port_release_buffer (port, buf);
   if (err != OMX_ErrorNone)
--
1.9.1

