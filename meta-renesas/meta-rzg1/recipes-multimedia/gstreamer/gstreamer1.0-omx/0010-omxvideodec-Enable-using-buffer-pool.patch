From 69e49ccf454d1121672cc03f215bee5a745674b5 Mon Sep 17 00:00:00 2001
From: Thao Luong <thao.luong.uw@rvc.renesas.com>
Date: Wed, 27 May 2015 11:06:51 +0700
Subject: [PATCH 06/25] omxvideodec: Enable using buffer pool

After applly this patch, the gst-omx buffer pool instance will be
created for output port. It is set up and notified to parent class

refs #69206
Signed-off-by: Thao Luong <thao.luong.uw@rvc.renesas.com>
---
 omx/gstomxvideodec.c | 66 ++++++++++++++++++++++++++++++++++++++++++----------
 1 file changed, 54 insertions(+), 12 deletions(-)

diff --git a/omx/gstomxvideodec.c b/omx/gstomxvideodec.c
index 9e54c43..2b14fc4 100644
--- a/omx/gstomxvideodec.c
+++ b/omx/gstomxvideodec.c
@@ -2196,6 +2196,10 @@ gst_omx_video_dec_set_format (GstVideoDecoder * decoder,
       if (gst_omx_port_allocate_buffers (self->dec_out_port) != OMX_ErrorNone)
         return FALSE;
     }
+    /* Create buffer pool for output port */
+    self->out_port_pool =
+        gst_omx_buffer_pool_new (GST_ELEMENT_CAST (self), self->dec,
+        self->dec_out_port);
 
     if (gst_omx_component_get_state (self->dec,
             GST_CLOCK_TIME_NONE) != OMX_StateIdle)
@@ -2708,6 +2712,8 @@ gst_omx_video_dec_decide_allocation (GstVideoDecoder * bdec, GstQuery * query)
 {
   GstBufferPool *pool;
   GstStructure *config;
+  GstOMXVideoDec *self;
+  GstCaps *caps;
 
 #if defined (USE_OMX_TARGET_RPI) && defined (HAVE_GST_GL)
   {
@@ -2748,22 +2754,58 @@ gst_omx_video_dec_decide_allocation (GstVideoDecoder * bdec, GstQuery * query)
     }
   }
 #endif
+  /* Set up buffer pool and notify it to parent class */
+  self = GST_OMX_VIDEO_DEC (bdec);
+  if (self->out_port_pool) {
+    /* Set pool parameters to our own configuration */
+    config = gst_buffer_pool_get_config (self->out_port_pool);
+    gst_buffer_pool_config_add_option (config,
+         GST_BUFFER_POOL_OPTION_VIDEO_META);
+    gst_query_parse_allocation (query, &caps, NULL);
+    gst_buffer_pool_config_set_params (config, caps,
+        self->dec_out_port->port_def.nBufferSize,
+        self->dec_out_port->port_def.nBufferCountActual,
+        self->dec_out_port->port_def.nBufferCountActual);
 
-  if (!GST_VIDEO_DECODER_CLASS
-      (gst_omx_video_dec_parent_class)->decide_allocation (bdec, query))
-    return FALSE;
+    if (!gst_buffer_pool_set_config (self->out_port_pool, config)) {
+      GST_ERROR_OBJECT (self, "Failed to set config on internal pool");
+      gst_object_unref (self->out_port_pool);
+      self->out_port_pool = NULL;
+      return FALSE;
+    }
+
+    GST_OMX_BUFFER_POOL (self->out_port_pool)->allocating = TRUE;
+    /* This now allocates all the buffers */
+    if (!gst_buffer_pool_set_active (self->out_port_pool, TRUE)) {
+      GST_INFO_OBJECT (self, "Failed to activate internal pool");
+      gst_object_unref (self->out_port_pool);
+      self->out_port_pool = NULL;
+    } else {
+      GST_OMX_BUFFER_POOL (self->out_port_pool)->allocating = FALSE;
+    }
 
-  g_assert (gst_query_get_n_allocation_pools (query) > 0);
-  gst_query_parse_nth_allocation_pool (query, 0, &pool, NULL, NULL, NULL);
-  g_assert (pool != NULL);
+    gst_query_set_nth_allocation_pool (query, 0, self->out_port_pool,
+        self->dec_out_port->port_def.nBufferSize,
+        self->dec_out_port->port_def.nBufferCountActual,
+        self->dec_out_port->port_def.nBufferCountActual);
+    gst_object_unref (self->out_port_pool);
+  } else {
+    if (!GST_VIDEO_DECODER_CLASS
+        (gst_omx_video_dec_parent_class)->decide_allocation (bdec, query))
+      return FALSE;
 
-  config = gst_buffer_pool_get_config (pool);
-  if (gst_query_find_allocation_meta (query, GST_VIDEO_META_API_TYPE, NULL)) {
-    gst_buffer_pool_config_add_option (config,
-        GST_BUFFER_POOL_OPTION_VIDEO_META);
+    g_assert (gst_query_get_n_allocation_pools (query) > 0);
+    gst_query_parse_nth_allocation_pool (query, 0, &pool, NULL, NULL, NULL);
+    g_assert (pool != NULL);
+
+    config = gst_buffer_pool_get_config (pool);
+    if (gst_query_find_allocation_meta (query, GST_VIDEO_META_API_TYPE, NULL)) {
+      gst_buffer_pool_config_add_option (config,
+          GST_BUFFER_POOL_OPTION_VIDEO_META);
+    }
+    gst_buffer_pool_set_config (pool, config);
+    gst_object_unref (pool);
   }
-  gst_buffer_pool_set_config (pool, config);
-  gst_object_unref (pool);
 
   return TRUE;
 }
-- 
2.4.0

