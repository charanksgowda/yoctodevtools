From 9adaf910e15e8392c8072951f8b585b83a619527 Mon Sep 17 00:00:00 2001
From: Thao Luong <thao.luong.uw@rvc.renesas.com>
Date: Wed, 27 May 2015 11:21:33 +0700
Subject: [PATCH 10/25] omxvideodec: Fix the buffer index determination to 
 acquire a buffer from the buffer pool

The GstOMXBuffer instances are associated with the buffers queued
in the output buffer pool. This index determination processing is
implemented on the premise that the GstOMXBuffer instances queued
in port->buffers is the same order with the ones queued in
the output buffer pool. If the order of the either queue is changed,
the processing can't correctly perform.

Actually the index specified by this determination is used in
gst_omx_buffer_pool_acquire_buffer() in order to obtain a buffer
from the output buffer pool, so the determinaion would rather see
the queue of the buffer pool than port->buffers.

refs #69206
Signed-off-by: Thao Luong <thao.luong.uw@rvc.renesas.com>
---
 omx/gstomxbufferpool.c | 14 ++++++--------
 omx/gstomxbufferpool.h |  2 ++
 omx/gstomxvideodec.c   | 22 ++++++++++++++++++++--
 3 files changed, 28 insertions(+), 10 deletions(-)

diff --git a/omx/gstomxbufferpool.c b/omx/gstomxbufferpool.c
index c5a5bdd..a86a4df 100644
--- a/omx/gstomxbufferpool.c
+++ b/omx/gstomxbufferpool.c
@@ -200,7 +200,6 @@ gst_omx_memory_allocator_alloc (GstAllocator * allocator, GstMemoryFlags flags,
  * back to the component (OMX_FillThisBuffer()) when it is released.
  */
 
-static GQuark gst_omx_buffer_data_quark = 0;
 
 #define DEBUG_INIT \
   GST_DEBUG_CATEGORY_INIT (gst_omx_buffer_pool_debug_category, "omxbufferpool", 0, \
@@ -477,7 +476,7 @@ gst_omx_buffer_pool_alloc_buffer (GstBufferPool * bpool,
   }
 
   gst_mini_object_set_qdata (GST_MINI_OBJECT_CAST (buf),
-      gst_omx_buffer_data_quark, omx_buf, NULL);
+      pool->gst_omx_buffer_data_quark, omx_buf, NULL);
 
   *buffer = buf;
 
@@ -502,12 +501,12 @@ gst_omx_buffer_pool_free_buffer (GstBufferPool * bpool, GstBuffer * buffer)
 
   omx_buf =
       gst_mini_object_get_qdata (GST_MINI_OBJECT_CAST (buffer),
-      gst_omx_buffer_data_quark);
+      pool->gst_omx_buffer_data_quark);
 
   g_slice_free (gboolean, omx_buf->private_data);
 
   gst_mini_object_set_qdata (GST_MINI_OBJECT_CAST (buffer),
-      gst_omx_buffer_data_quark, NULL, NULL);
+      pool->gst_omx_buffer_data_quark, NULL, NULL);
 
   GST_BUFFER_POOL_CLASS (gst_omx_buffer_pool_parent_class)->free_buffer (bpool,
       buffer);
@@ -533,7 +532,7 @@ gst_omx_buffer_pool_acquire_buffer (GstBufferPool * bpool,
 
     omx_buf =
         gst_mini_object_get_qdata (GST_MINI_OBJECT_CAST (buf),
-        gst_omx_buffer_data_quark);
+        pool->gst_omx_buffer_data_quark);
 
     vdbuf_data = (GstOMXVideoDecBufferData *) omx_buf->private_data;
     vdbuf_data->already_acquired = TRUE;
@@ -573,7 +572,7 @@ gst_omx_buffer_pool_release_buffer (GstBufferPool * bpool, GstBuffer * buffer)
 
     omx_buf =
         gst_mini_object_get_qdata (GST_MINI_OBJECT_CAST (buffer),
-        gst_omx_buffer_data_quark);
+        pool->gst_omx_buffer_data_quark);
 
     vdbuf_data = (GstOMXVideoDecBufferData *) omx_buf->private_data;
 
@@ -644,8 +643,6 @@ gst_omx_buffer_pool_class_init (GstOMXBufferPoolClass * klass)
   GObjectClass *gobject_class = (GObjectClass *) klass;
   GstBufferPoolClass *gstbufferpool_class = (GstBufferPoolClass *) klass;
 
-  gst_omx_buffer_data_quark = g_quark_from_static_string ("GstOMXBufferData");
-
   gobject_class->finalize = gst_omx_buffer_pool_finalize;
   gstbufferpool_class->start = gst_omx_buffer_pool_start;
   gstbufferpool_class->stop = gst_omx_buffer_pool_stop;
@@ -662,6 +659,7 @@ gst_omx_buffer_pool_init (GstOMXBufferPool * pool)
 {
   pool->buffers = g_ptr_array_new ();
   pool->allocator = g_object_new (gst_omx_memory_allocator_get_type (), NULL);
+  pool->gst_omx_buffer_data_quark = g_quark_from_static_string ("GstOMXBufferData");
 }
 
 GstBufferPool *
diff --git a/omx/gstomxbufferpool.h b/omx/gstomxbufferpool.h
index a8c0dc4..f2e53ff 100644
--- a/omx/gstomxbufferpool.h
+++ b/omx/gstomxbufferpool.h
@@ -79,6 +79,8 @@ struct _GstOMXBufferPool
    * wrapped
    */
   gint current_buffer_index;
+  /* GQuark contain name of user pointer point to OMX buffer of output */
+  GQuark gst_omx_buffer_data_quark;
 };
 
 struct _GstOMXBufferPoolClass
diff --git a/omx/gstomxvideodec.c b/omx/gstomxvideodec.c
index 104d0f7..8ccbc5b 100644
--- a/omx/gstomxvideodec.c
+++ b/omx/gstomxvideodec.c
@@ -1557,7 +1557,16 @@ gst_omx_video_dec_loop (GstOMXVideoDec * self)
 
       n = port->buffers->len;
       for (i = 0; i < n; i++) {
-        GstOMXBuffer *tmp = g_ptr_array_index (port->buffers, i);
+        GstBuffer *outbuf;
+        GstOMXBuffer *tmp;
+        GstOMXBufferPool *pool = GST_OMX_BUFFER_POOL (self->out_port_pool);
+
+        outbuf =
+            g_ptr_array_index (GST_OMX_BUFFER_POOL (self->
+                out_port_pool)->buffers, i);
+        tmp =
+            gst_mini_object_get_qdata (GST_MINI_OBJECT_CAST (outbuf),
+            pool->gst_omx_buffer_data_quark);
 
         if (tmp == buf)
           break;
@@ -1598,7 +1607,16 @@ gst_omx_video_dec_loop (GstOMXVideoDec * self)
 
       n = port->buffers->len;
       for (i = 0; i < n; i++) {
-        GstOMXBuffer *tmp = g_ptr_array_index (port->buffers, i);
+        GstBuffer *outbuf;
+        GstOMXBuffer *tmp;
+        GstOMXBufferPool *pool = GST_OMX_BUFFER_POOL (self->out_port_pool);
+
+        outbuf =
+            g_ptr_array_index (GST_OMX_BUFFER_POOL (self->
+                out_port_pool)->buffers, i);
+        tmp =
+            gst_mini_object_get_qdata (GST_MINI_OBJECT_CAST (outbuf),
+            pool->gst_omx_buffer_data_quark);
 
         if (tmp == buf)
           break;
-- 
2.4.0

