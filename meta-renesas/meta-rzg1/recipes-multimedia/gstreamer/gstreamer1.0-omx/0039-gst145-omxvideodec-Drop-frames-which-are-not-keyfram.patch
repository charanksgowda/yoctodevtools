From 7ef2092d0f35586b27685ce5ecae37ffecfc12db Mon Sep 17 00:00:00 2001
From: Long Dang <long.dang.aj@rvc.renesas.com>
Date: Fri, 12 Aug 2016 13:22:37 +0700
Subject: [PATCH 39/42] gst145-omxvideodec: Drop frames which are not keyframes
 in the backward playback

Porting from a patch in Linux 3.10 environment made by Kazunori Kobayashi <kkobayas@igel.co.jp>

The backward playback algorithm in GStreamer sorts decoded frames
in reverse order for each GOP, so the number of output buffers as
the same as GOP are needed.

This change achieves the backward playback without resort to the
algorithm by outputting only keyframes and dropping others,
not doing the reordering in gst-omx as the demuxer moves the
read position backward in steps of a keyframe.

Signed-off-by: Long Dang <long.dang.aj@rvc.renesas.com>
---
 omx/gstomxvideodec.c | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/omx/gstomxvideodec.c b/omx/gstomxvideodec.c
index efa0689..97e66ec 100644
--- a/omx/gstomxvideodec.c
+++ b/omx/gstomxvideodec.c
@@ -1604,6 +1604,13 @@ gst_omx_video_dec_loop (GstOMXVideoDec * self)
         GST_TIME_ARGS (-deadline));
     flow_ret = gst_video_decoder_drop_frame (GST_VIDEO_DECODER (self), frame);
     frame = NULL;
+  } else if (frame &&
+      !GST_VIDEO_CODEC_FRAME_IS_SYNC_POINT (frame) &&
+      GST_VIDEO_DECODER (self)->output_segment.rate < 0.0) {
+    GST_LOG_OBJECT (self,
+        "Drop a frame which is not a keyframe in the backward playback");
+    flow_ret = gst_video_decoder_drop_frame (GST_VIDEO_DECODER (self), frame);
+    frame = NULL;
   } else if (!frame && (buf->omx_buf->nFilledLen > 0 || buf->eglimage)) {
     GstBuffer *outbuf = NULL;
 
-- 
1.9.1

