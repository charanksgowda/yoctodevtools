From 203762e93a7121feb090418c23b8166bbd5a34cd Mon Sep 17 00:00:00 2001
From: Dmitry Shifrin <dmitry.shifrin@cogentembedded.com>
Date: Mon, 18 Jul 2016 18:04:11 +0300
Subject: [PATCH] add r8a7794 quirk for sgx clock

---
 arch/arm/mach-shmobile/Makefile            |  2 +-
 arch/arm/mach-shmobile/sgx-r8a7794-quirk.c | 76 ++++++++++++++++++++++++++++++
 2 files changed, 77 insertions(+), 1 deletion(-)
 create mode 100644 arch/arm/mach-shmobile/sgx-r8a7794-quirk.c

diff --git a/arch/arm/mach-shmobile/Makefile b/arch/arm/mach-shmobile/Makefile
index b3b4263..b7ac5e11 100644
--- a/arch/arm/mach-shmobile/Makefile
+++ b/arch/arm/mach-shmobile/Makefile
@@ -15,7 +15,7 @@ obj-$(CONFIG_ARCH_R8A7790)	+= setup-r8a7790.o
 obj-$(CONFIG_ARCH_R8A7791)	+= setup-r8a7791.o
 obj-$(CONFIG_ARCH_R8A7743)	+= setup-r8a7743.o
 obj-$(CONFIG_ARCH_R8A7793)	+= setup-r8a7793.o
-obj-$(CONFIG_ARCH_R8A7794)	+= setup-r8a7794.o
+obj-$(CONFIG_ARCH_R8A7794)	+= setup-r8a7794.o sgx-r8a7794-quirk.o
 obj-$(CONFIG_ARCH_EMEV2)	+= setup-emev2.o
 obj-$(CONFIG_ARCH_R7S72100)	+= setup-r7s72100.o
 
diff --git a/arch/arm/mach-shmobile/sgx-r8a7794-quirk.c b/arch/arm/mach-shmobile/sgx-r8a7794-quirk.c
new file mode 100644
index 0000000..0f2f047
--- /dev/null
+++ b/arch/arm/mach-shmobile/sgx-r8a7794-quirk.c
@@ -0,0 +1,76 @@
+/*
+
+*/
+#include <linux/device.h>
+#include <linux/init.h>
+#include <linux/io.h>
+#include <linux/notifier.h>
+#include <linux/of.h>
+#include <linux/platform_device.h>
+#include <linux/clk.h>
+
+
+#define DEV_NAME	"fd800000.sgx"
+
+static struct clk *clk;
+
+static int r8a7794_sgx_notifier_call(struct notifier_block *nb,
+				    unsigned long event, void *data)
+{
+	struct device *dev = data;
+	u32 val;
+
+	switch (event) {
+	case BUS_NOTIFY_BIND_DRIVER:
+		if (!strcmp(DEV_NAME, dev_name(dev))) {
+
+			if (IS_ERR(clk)) break;
+			if (clk_prepare_enable(clk) < 0){
+				pr_warn("SGX Quirk can not enable clk\n");
+			}
+			pr_info("SGX quirk clk is enabled\n");
+		}
+		break;
+
+	case BUS_NOTIFY_UNBOUND_DRIVER:
+		if (!strcmp(DEV_NAME, dev_name(dev))) {
+			if (IS_ERR(clk)) break;
+			clk_disable_unprepare(clk);
+			pr_info("SGX quirk clk is disabled\n");
+		}
+		break;
+	}
+	return NOTIFY_DONE;
+}
+
+
+
+static struct notifier_block platform_nb = {
+	.notifier_call = r8a7794_sgx_notifier_call,
+};
+
+
+static int __init sgx_r8a7794_quirk_init(void)
+{
+	static int once;
+
+	if (once++)
+		return -ENOMEM;
+
+	if (!of_machine_is_compatible("renesas,r8a7794"))
+		return -ENODEV;
+
+	clk = clk_get(NULL, "vcp0");
+	if (IS_ERR(clk))
+	{
+		pr_warn("SGX Quirk can not get clk\n");
+		return -ENOENT;
+	}
+
+	bus_register_notifier(&platform_bus_type, &platform_nb);
+
+	pr_info("Installing sgx clock quirk\n");
+	return 0;
+}
+
+arch_initcall(sgx_r8a7794_quirk_init);
-- 
1.9.1

