From: Wolfram Sang <wsa+renesas@sang-engineering.com>

If pinctrl_provide_dummies() is used unconditionally, then the dummy
state will be used even on DT platforms when the "init" state was
intentionally left out. Instead of "default", the dummy "init" state
will then be used during probe. Thus, when probing an I2C controller on
cold boot, communication triggered by bus notifiers broke because the
pins were not initialized.

Do it like OMAP2: use the dummy state only for non-DT platforms.

Reported-by: Geert Uytterhoeven <geert+renesas@glider.be>
Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
---

Geert recently pointed out the problem, that the IRQ2 fixup for the
DA9xxx PMICs failed on Lager on cold boot. I could verify this iff IIC3
was used and not I2C3. IIC3 is the default, however I mostly used I2C3
recently, because it has the slave capabilities.

The original pinctrl_provide_dummies() is there since the beginning of the
file, so in order to avoid regressions, the below solution looks plausible to
me. I do not have much experience with hardware older than Gen2, though, so
comments are much appreciated!


 drivers/pinctrl/sh-pfc/core.c |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

Index: linux-stable/drivers/pinctrl/sh-pfc/core.c
===================================================================
--- linux-stable.orig/drivers/pinctrl/sh-pfc/core.c
+++ linux-stable/drivers/pinctrl/sh-pfc/core.c
@@ -545,7 +545,9 @@ static int sh_pfc_probe(struct platform_
 			return ret;
 	}
 
-	pinctrl_provide_dummies();
+	/* Enable dummy states for those platforms without pinctrl support */
+	if (!of_have_populated_dt())
+		pinctrl_provide_dummies();
 
 	ret = sh_pfc_init_ranges(pfc);
 	if (ret < 0)
